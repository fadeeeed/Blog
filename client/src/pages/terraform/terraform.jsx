import "./terraform-style.scss";
import Article from "../../components/article/article";

const Terraform = () => {
  const tempObj = {
    category: "Terraform",
    title: "An Introduction to Terraform for Beginners – Terraform Tutorial ",
    description:
      "Infrastructure as Code (IaC) is a widespread terminology among DevOps professionals. It is the process of managing and provisioning the complete IT infrastructure (comprises both physical and virtual machines) using machine-readable definition files. It is a software engineering approach toward operations. It helps in automating the complete data center by using programming scripts. With all the features that Infrastructure as Code provides, it has multiple challenges: Need to learn to code Don’t know the change impact. Need to revert the change Can’t track changes Can’t automate a resource Multiple environments for infrastructure Terraform has been created to solve these challenges. What is Terraform? Terraform is an open-source infrastructure as Code tool developed by HashiCorp. It is used to define and provision the complete infrastructure using an easy-to-learn declarative language. It is an infrastructure provisioning tool where you can store your cloud infrastructure setup as codes. It’s very similar to tools such as CloudFormation, which you would use to automate your AWS infrastructure, but you can only use that on AWS. With Terraform, you can use it on other cloud platforms as well. YouTube video Below are some of the benefits of using Terraform. Does orchestration, not just configuration management Supports multiple providers such as AWS, Azure, GCP, DigitalOcean and many more Provide immutable infrastructure where configuration changes smoothly Uses easy to understand language, HCL (HashiCorp configuration language) Easily portable to any other provider Supports Client only architecture, so no need for additional configuration management on a server. Infrastructure as Code (IaC) is a widespread terminology among DevOps professionals. It is the process of managing and provisioning the complete IT infrastructure (comprises both physical and virtual machines) using machine-readable definition files. It is a software engineering approach toward operations. It helps in automating the complete data center by using programming scripts. With all the features that Infrastructure as Code provides, it has multiple challenges: Need to learn to code Don’t know the change impact. Need to revert the change Can’t track changes Can’t automate a resource Multiple environments for infrastructure Terraform has been created to solve these challenges. What is Terraform? Terraform is an open-source infrastructure as Code tool developed by HashiCorp. It is used to define and provision the complete infrastructure using an easy-to-learn declarative language. It is an infrastructure provisioning tool where you can store your cloud infrastructure setup as codes. It’s very similar to tools such as CloudFormation, which you would use to automate your AWS infrastructure, but you can only use that on AWS. With Terraform, you can use it on other cloud platforms as well. YouTube video Below are some of the benefits of using Terraform. Does orchestration, not just configuration management Supports multiple providers such as AWS, Azure, GCP, DigitalOcean and many more Provide immutable infrastructure where configuration changes smoothly Uses easy to understand language, HCL (HashiCorp configuration language) Easily portable to any other provider Supports Client only architecture, so no need for additional configuration management on a server. Infrastructure as Code (IaC) is a widespread terminology among DevOps professionals. It is the process of managing and provisioning the complete IT infrastructure (comprises both physical and virtual machines) using machine-readable definition files. It is a software engineering approach toward operations. It helps in automating the complete data center by using programming scripts. With all the features that Infrastructure as Code provides, it has multiple challenges: Need to learn to code Don’t know the change impact. Need to revert the change Can’t track changes Can’t automate a resource Multiple environments for infrastructure Terraform has been created to solve these challenges. What is Terraform? Terraform is an open-source infrastructure as Code tool developed by HashiCorp. It is used to define and provision the complete infrastructure using an easy-to-learn declarative language. It is an infrastructure provisioning tool where you can store your cloud infrastructure setup as codes. It’s very similar to tools such as CloudFormation, which you would use to automate your AWS infrastructure, but you can only use that on AWS. With Terraform, you can use it on other cloud platforms as well. YouTube video Below are some of the benefits of using Terraform. Does orchestration, not just configuration management Supports multiple providers such as AWS, Azure, GCP, DigitalOcean and many more Provide immutable infrastructure where configuration changes smoothly Uses easy to understand language, HCL (HashiCorp configuration language) Easily portable to any other provider Supports Client only architecture, so no need for additional configuration management on a server",
  };
  return (
    <div className="terraform-container">
      <Article dataObject={tempObj}></Article>
    </div>
  );
};

export default Terraform;
